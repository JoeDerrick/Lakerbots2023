// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package frc.robot.commands.SmartCommands.Auto;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import frc.robot.SetPoints;
import frc.robot.commands.DrivetrainCommands.Drive;
import frc.robot.commands.DrivetrainCommands.DriveAmount;
import frc.robot.commands.DrivetrainCommands.DriveAmountAtDifferentSpeedsAfterDistanceMovingArmAndWrist;
import frc.robot.commands.DrivetrainCommands.DriveAmountWhileCollecting;
import frc.robot.commands.ElevatorCommands.ElevatorGoToPosition;
import frc.robot.commands.IntakeCommands.IntakeCube;
import frc.robot.commands.IntakeCommands.IntakeMotorGo;
import frc.robot.commands.SmartCommands.ClimbPoseBack;
import frc.robot.commands.SmartCommands.CollectFloorPoseBack;
import frc.robot.commands.SmartCommands.HomePose;
import frc.robot.commands.SmartCommands.Scores.ScoreHighConePose;
import frc.robot.commands.SmartCommands.Scores.ScoreHighCubePose;
import frc.robot.subsystems.elevator;
import frc.robot.subsystems.intake;
import frc.robot.subsystems.leds;
import frc.robot.subsystems.arm;
import frc.robot.subsystems.drivetrain;
import frc.robot.commands.SmartCommands.Balance;

import frc.robot.subsystems.wrist;


/**
 *
 */
public class PickupCubeBlueLoadingStationv2 extends SequentialCommandGroup {

   

    public PickupCubeBlueLoadingStationv2(intake intake, wrist wrist, arm arm, elevator elevator, drivetrain drivetrain, leds leds){

   
    addCommands(

        //Score high
        new DriveAmount(drivetrain, 2, -0.05, isFinished()).withTimeout(0.2),
        new ScoreHighConePose(intake, wrist, arm, elevator),
        new IntakeMotorGo(intake, -0.4).withTimeout(0.2),
    
        new ElevatorGoToPosition(elevator, 0),
        new IntakeMotorGo(intake, .3),

        //go collect pos
        new DriveAmountAtDifferentSpeedsAfterDistanceMovingArmAndWrist(drivetrain, arm, wrist, 
        190, 165, 
        -0.35, -0.12,
        0.01, 0.02, 
        SetPoints.armPickupBack, SetPoints.WristCollectBack),
        
        //score
        new DriveAmountAtDifferentSpeedsAfterDistanceMovingArmAndWrist(drivetrain, arm, wrist, 
        185, 80, 
        0.4, 0.25, 
        -0.02, 0, 
        SetPoints.armPlaceConeMiddleFront, SetPoints.WristScoreFrontCube),


        new IntakeMotorGo(intake, -0.4).withTimeout(0.1),

        new DriveAmountAtDifferentSpeedsAfterDistanceMovingArmAndWrist(drivetrain, arm, wrist, 
        20, 8, 
        -0.2, -0.04,
        0.1, 0, 
        SetPoints.armHome, SetPoints.WristHome)
        );
    }

    @Override
    public boolean runsWhenDisabled() {
  
        return false;

    
    }
}
