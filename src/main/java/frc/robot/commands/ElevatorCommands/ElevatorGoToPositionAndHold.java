// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup.

package frc.robot.commands.ElevatorCommands;
import edu.wpi.first.wpilibj2.command.CommandBase;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.elevator;
import frc.robot.subsystems.intake;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class ElevatorGoToPositionAndHold extends CommandBase {
    private final elevator m_ElevatorSubsystem;
    private final intake m_intake;
    public double position;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    public ElevatorGoToPositionAndHold(intake intake, elevator elevator, double position){
        m_ElevatorSubsystem = elevator;
        m_intake = intake;
    // Use addRequirements() here to declare subsystem dependencies.
    addRequirements(elevator);
    addRequirements(intake);

    this.position = position;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    

    
    }
    @Override
    public void initialize(){
        System.out.println("ELEVATOR INIT!");
        
    }

    @Override
    public void execute(){
        //System.out.println("ele exe");
        m_ElevatorSubsystem.elevatorGetPosition();
        m_ElevatorSubsystem.elevatorGoToPosition(position);
        System.out.println("elevatorposition, velocity" +m_ElevatorSubsystem.elevatorGetPosition() +m_ElevatorSubsystem.elevatorGetVelocity());
        
        m_intake.intakeMotorGo(0.1);
    }

    
    @Override
    public void end(boolean interrupted){}

    @Override
    public boolean isFinished(){
        if(m_ElevatorSubsystem.elevatorAtTargetPosition()){
            //System.out.println("el fin");
            return true;
        }
        else{
            return false;
        }
    }
    
    @Override
    public boolean runsWhenDisabled() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
        return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    }
}
